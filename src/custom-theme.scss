// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


$mat-primary: (
  main: var(--primary-color),
  lighter: var(--primary-light),
  darker:  var(--primary-dark),
  200: var(--primary-color),
  // For slide toggle,
  contrast:
    (
      main: #ffffff,
      lighter: #000000,
      darker: #ffffff,
    ),
);


$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);
$theme-accent: mat.define-palette($mat-primary, main, lighter, darker);
$my-typography: mat.define-typography-config($font-family: "Open Sans, sans-serif");

$mt-theme: mat.define-light-theme(
  (
    color: (
      primary: $theme-primary,
      accent: $theme-accent,
    ),
    typography: $my-typography,
    density: 0,
  )
);


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($mt-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($angular18-standalone-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($angular18-standalone-theme);
